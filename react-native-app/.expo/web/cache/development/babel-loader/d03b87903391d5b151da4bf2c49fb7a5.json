{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\native\\\\social-media-smartphone-app\\\\react-native-app\\\\src\\\\components\\\\Wall\\\\WallPost\\\\WallPostBottomBar.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button } from \"react-native-paper\";\nimport Colors from \"../../../../constants/Colors\";\nimport { View } from \"../../Themed\";\n\nvar WallPostBottomBar = function (_React$Component) {\n  _inherits(WallPostBottomBar, _React$Component);\n\n  var _super = _createSuper(WallPostBottomBar);\n\n  function WallPostBottomBar(props) {\n    var _this;\n\n    _classCallCheck(this, WallPostBottomBar);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      likeButtonCliked: false\n    };\n    _this.handlerButtonOnClick = _this.handlerButtonOnClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(WallPostBottomBar, [{\n    key: \"handlerButtonOnClick\",\n    value: function handlerButtonOnClick() {\n      if (this.state.likeButtonCliked) {\n        this.setState({\n          likeButtonCliked: false\n        });\n      } else {\n        this.setState({\n          likeButtonCliked: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var likeButtonTextColor;\n\n      if (this.state.likeButtonCliked) {\n        likeButtonTextColor = \"mediumblue\";\n      } else {\n        likeButtonTextColor = \"white\";\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        darkColor: Colors[\"dark\"].postBackgroundColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        style: styles.buttonLikeStyle,\n        icon: \"thumb-up\",\n        mode: \"outlined\",\n        color: likeButtonTextColor,\n        disabled: false,\n        onPress: function onPress() {\n          _this2.handlerButtonOnClick();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, \"Like\"), React.createElement(Button, {\n        style: styles.buttonCommentStyle,\n        icon: \"comment\",\n        mode: \"contained\",\n        color: \"darkblue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, \"comment\"));\n    }\n  }]);\n\n  return WallPostBottomBar;\n}(React.Component);\n\nexport { WallPostBottomBar as default };\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 5,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  buttonCommentStyle: {\n    width: \"48%\"\n  },\n  buttonLikeStyle: {\n    width: \"48%\",\n    backgroundColor: \"green\"\n  }\n});","map":{"version":3,"sources":["D:/native/social-media-smartphone-app/react-native-app/src/components/Wall/WallPost/WallPostBottomBar.tsx"],"names":["React","Button","Colors","View","WallPostBottomBar","props","state","likeButtonCliked","handlerButtonOnClick","bind","setState","likeButtonTextColor","styles","container","postBackgroundColor","buttonLikeStyle","buttonCommentStyle","Component","StyleSheet","create","paddingTop","flexDirection","justifyContent","width","backgroundColor"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,MAAP;AAEA,SAAeC,IAAf;;IAEqBC,iB;;;;;AAInB,6BAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACtB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,gBAAgB,EAAE;AADP,KAAb;AAGA,UAAKC,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BC,IAA1B,+BAA5B;AALsB;AAMvB;;;;WACD,gCAAuB;AACrB,UAAI,KAAKH,KAAL,CAAWC,gBAAf,EAAiC;AAC/B,aAAKG,QAAL,CAAc;AACZH,UAAAA,gBAAgB,EAAE;AADN,SAAd;AAGD,OAJD,MAIO;AACL,aAAKG,QAAL,CAAc;AACZH,UAAAA,gBAAgB,EAAE;AADN,SAAd;AAGD;AACF;;;WACD,kBAAS;AAAA;;AACP,UAAII,mBAAJ;;AAEA,UAAI,KAAKL,KAAL,CAAWC,gBAAf,EAAiC;AAC/BI,QAAAA,mBAAmB,GAAG,YAAtB;AACD,OAFD,MAEO;AACLA,QAAAA,mBAAmB,GAAG,OAAtB;AACD;;AAED,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEC,MAAM,CAACC,SADhB;AAGE,QAAA,SAAS,EAAEX,MAAM,CAAC,MAAD,CAAN,CAAeY,mBAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAEF,MAAM,CAACG,eADhB;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,KAAK,EAAEJ,mBAJT;AAKE,QAAA,QAAQ,EAAE,KALZ;AAME,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACH,oBAAL;AACD,SARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,EAiBE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAEI,MAAM,CAACI,kBADhB;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,IAAI,EAAC,WAHP;AAIE,QAAA,KAAK,EAAC,UAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAjBF,CADF;AA4BD;;;;EA3D4ChB,KAAK,CAACiB,S;;SAAhCb,iB;AA8DrB,IAAMQ,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AAETO,IAAAA,UAAU,EAAE,CAFH;AAGTC,IAAAA,aAAa,EAAE,KAHN;AAKTC,IAAAA,cAAc,EAAE;AALP,GADoB;AAQ/BN,EAAAA,kBAAkB,EAAE;AAClBO,IAAAA,KAAK,EAAE;AADW,GARW;AAW/BR,EAAAA,eAAe,EAAE;AACfQ,IAAAA,KAAK,EAAE,KADQ;AAEfC,IAAAA,eAAe,EAAE;AAFF;AAXc,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, TouchableOpacity, Image } from \"react-native\";\r\nimport { Button } from \"react-native-paper\";\r\nimport Colors from \"../../../../constants/Colors\";\r\n\r\nimport { Text, View } from \"../../Themed\";\r\n\r\nexport default class WallPostBottomBar extends React.Component<\r\n  {},\r\n  { likeButtonCliked: Boolean }\r\n> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      likeButtonCliked: false,\r\n    };\r\n    this.handlerButtonOnClick = this.handlerButtonOnClick.bind(this);\r\n  }\r\n  handlerButtonOnClick() {\r\n    if (this.state.likeButtonCliked) {\r\n      this.setState({\r\n        likeButtonCliked: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        likeButtonCliked: true,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    var likeButtonTextColor;\r\n\r\n    if (this.state.likeButtonCliked) {\r\n      likeButtonTextColor = \"mediumblue\";\r\n    } else {\r\n      likeButtonTextColor = \"white\";\r\n    }\r\n\r\n    return (\r\n      <View\r\n        style={styles.container}\r\n        //lightColor=\"rgba(242,242,242,0.9)\"\r\n        darkColor={Colors[\"dark\"].postBackgroundColor}\r\n      >\r\n        <Button\r\n          style={styles.buttonLikeStyle}\r\n          icon=\"thumb-up\"\r\n          mode=\"outlined\"\r\n          color={likeButtonTextColor}\r\n          disabled={false}\r\n          onPress={() => {\r\n            this.handlerButtonOnClick();\r\n          }}\r\n        >\r\n          Like\r\n        </Button>\r\n        <Button\r\n          style={styles.buttonCommentStyle}\r\n          icon=\"comment\"\r\n          mode=\"contained\"\r\n          color=\"darkblue\"\r\n        >\r\n          comment\r\n        </Button>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    //flex: 1,\r\n    paddingTop: 5,\r\n    flexDirection: \"row\",\r\n    //alignItems: \"stretch\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  buttonCommentStyle: {\r\n    width: \"48%\",\r\n  },\r\n  buttonLikeStyle: {\r\n    width: \"48%\",\r\n    backgroundColor: \"green\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}