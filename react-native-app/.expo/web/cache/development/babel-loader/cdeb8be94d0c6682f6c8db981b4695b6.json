{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\native\\\\social-media-smartphone-app\\\\react-native-app\\\\src\\\\components\\\\Wall\\\\WallPostFullVIew\\\\WallPostComment.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Avatar } from \"react-native-paper\";\nimport { Text, View } from \"../../Themed\";\nimport Colors from \"../../../../constants/Colors\";\nvar imageSize = Math.round(Dimensions.get(\"window\").height / 17);\n\nvar WallPostComment = function (_React$Component) {\n  _inherits(WallPostComment, _React$Component);\n\n  var _super = _createSuper(WallPostComment);\n\n  function WallPostComment() {\n    _classCallCheck(this, WallPostComment);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(WallPostComment, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          username = _this$props.username,\n          contentText = _this$props.contentText;\n      return React.createElement(View, {\n        style: styles.container,\n        darkColor: Colors[\"dark\"].postBackgroundColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        darkColor: Colors[\"dark\"].postBackgroundColor,\n        style: styles.wallCommentAndAvatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, React.createElement(Avatar.Image, {\n        size: imageSize,\n        source: require(\"../../User/pictures/4-ea52435acc6cf488e05e75c209b2bd.jpg\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.wallCommentAuthor,\n        lightColor: \"rgba(0,0,0,0.8)\",\n        darkColor: \"rgba(255,255,255,0.8)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, username)), React.createElement(Text, {\n        style: styles.wallCommentContent,\n        lightColor: \"rgba(0,0,0,0.8)\",\n        darkColor: \"rgba(255,255,255,0.8)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, contentText));\n    }\n  }]);\n\n  return WallPostComment;\n}(React.Component);\n\nexport { WallPostComment as default };\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 8,\n    paddingRight: 8\n  },\n  wallCommentAndAvatar: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\"\n  },\n  wallCommentAuthor: {\n    alignSelf: \"center\",\n    marginLeft: 8,\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  wallCommentContent: {\n    paddingTop: 5\n  }\n});","map":{"version":3,"sources":["D:/native/social-media-smartphone-app/react-native-app/src/components/Wall/WallPostFullVIew/WallPostComment.tsx"],"names":["React","Avatar","Text","View","Colors","imageSize","Math","round","Dimensions","get","height","WallPostComment","props","username","contentText","styles","container","postBackgroundColor","wallCommentAndAvatar","require","wallCommentAuthor","wallCommentContent","Component","StyleSheet","create","paddingTop","paddingBottom","paddingLeft","paddingRight","flexDirection","justifyContent","alignSelf","marginLeft","fontSize","fontWeight"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,SAASC,IAAT,EAAeC,IAAf;AACA,OAAOC,MAAP;AAEA,IAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC,EAA7C,CAAlB;;IAQqBC,e;;;;;;;;;;;;;WACnB,kBAAS;AAAA,wBAC2B,KAAKC,KADhC;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,WADX,eACWA,WADX;AAGP,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEC,MAAM,CAACC,SADhB;AAGE,QAAA,SAAS,EAAEZ,MAAM,CAAC,MAAD,CAAN,CAAea,mBAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AACE,QAAA,SAAS,EAAEb,MAAM,CAAC,MAAD,CAAN,CAAea,mBAD5B;AAEE,QAAA,KAAK,EAAEF,MAAM,CAACG,oBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,MAAD,CAAQ,KAAR;AACE,QAAA,IAAI,EAAEb,SADR;AAEE,QAAA,MAAM,EAAEc,OAAO,4DAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAQE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEJ,MAAM,CAACK,iBADhB;AAEE,QAAA,UAAU,EAAC,iBAFb;AAGE,QAAA,SAAS,EAAC,uBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGP,QALH,CARF,CALF,EAqBE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEE,MAAM,CAACM,kBADhB;AAEE,QAAA,UAAU,EAAC,iBAFb;AAGE,QAAA,SAAS,EAAC,uBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGP,WALH,CArBF,CADF;AA+BD;;;;EAnC0Cd,KAAK,CAACsB,S;;SAA9BX,e;AAsCrB,IAAMI,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,UAAU,EAAE,EADH;AAETC,IAAAA,aAAa,EAAE,EAFN;AAGTC,IAAAA,WAAW,EAAE,CAHJ;AAITC,IAAAA,YAAY,EAAE;AAJL,GADoB;AAO/BV,EAAAA,oBAAoB,EAAE;AACpBW,IAAAA,aAAa,EAAE,KADK;AAEpBC,IAAAA,cAAc,EAAE;AAFI,GAPS;AAW/BV,EAAAA,iBAAiB,EAAE;AAEjBW,IAAAA,SAAS,EAAE,QAFM;AAGjBC,IAAAA,UAAU,EAAE,CAHK;AAIjBC,IAAAA,QAAQ,EAAE,EAJO;AAKjBC,IAAAA,UAAU,EAAE;AALK,GAXY;AAkB/Bb,EAAAA,kBAAkB,EAAE;AAClBI,IAAAA,UAAU,EAAE;AADM;AAlBW,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Image, Dimensions } from \"react-native\";\r\nimport { Avatar } from \"react-native-paper\";\r\n\r\nimport { Text, View } from \"../../Themed\";\r\nimport Colors from \"../../../../constants/Colors\";\r\n\r\nconst imageSize = Math.round(Dimensions.get(\"window\").height / 17);\r\n\r\nexport interface IWallPostCommentProps {\r\n  username: string;\r\n  contentText: string;\r\n  //avatar: Image;\r\n}\r\n\r\nexport default class WallPostComment extends React.Component<IWallPostCommentProps> {\r\n  render() {\r\n    const { username, contentText } = this.props;\r\n\r\n    return (\r\n      <View\r\n        style={styles.container}\r\n        //lightColor=\"rgba(242,242,242,0.9)\"\r\n        darkColor={Colors[\"dark\"].postBackgroundColor}\r\n      >\r\n        <View\r\n          darkColor={Colors[\"dark\"].postBackgroundColor}\r\n          style={styles.wallCommentAndAvatar}\r\n        >\r\n          <Avatar.Image\r\n            size={imageSize}\r\n            source={require(\"../../User/pictures/4-ea52435acc6cf488e05e75c209b2bd.jpg\")}\r\n          />\r\n          <Text\r\n            style={styles.wallCommentAuthor}\r\n            lightColor=\"rgba(0,0,0,0.8)\"\r\n            darkColor=\"rgba(255,255,255,0.8)\"\r\n          >\r\n            {username}\r\n          </Text>\r\n        </View>\r\n        <Text\r\n          style={styles.wallCommentContent}\r\n          lightColor=\"rgba(0,0,0,0.8)\"\r\n          darkColor=\"rgba(255,255,255,0.8)\"\r\n        >\r\n          {contentText}\r\n        </Text>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    paddingLeft: 8,\r\n    paddingRight: 8,\r\n  },\r\n  wallCommentAndAvatar: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  wallCommentAuthor: {\r\n    //paddingTop: usernamePaddingTop,\r\n    alignSelf: \"center\",\r\n    marginLeft: 8,\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  wallCommentContent: {\r\n    paddingTop: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}